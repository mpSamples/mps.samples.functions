package mps.samples.functions.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Function extends BaseConcept implements INamedConcept {
  public static final String concept = "mps.samples.functions.structure.Function";
  public static final String DESCRIPTION = "description";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String ITERATIONS = "iterations";
  public static final String INPUT = "input";
  public static final String OUTPUT = "output";

  public Function(SNode node) {
    super(node);
  }

  public String getDescription() {
    return this.getProperty(Function.DESCRIPTION);
  }

  public void setDescription(String value) {
    this.setProperty(Function.DESCRIPTION, value);
  }

  public String getName() {
    return this.getProperty(Function.NAME);
  }

  public void setName(String value) {
    this.setProperty(Function.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Function.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Function.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Function.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Function.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Function.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Function.VIRTUAL_PACKAGE, value);
  }

  public int getIterations() {
    return this.getIntegerProperty(Function.ITERATIONS);
  }

  public void setIterations(int value) {
    this.setIntegerProperty(Function.ITERATIONS, value);
  }

  public int getInputsCount() {
    return this.getChildCount(Function.INPUT);
  }

  public Iterator<Input> inputs() {
    return this.children(Input.class, Function.INPUT);
  }

  public List<Input> getInputs() {
    return this.getChildren(Input.class, Function.INPUT);
  }

  public void addInput(Input node) {
    this.addChild(Function.INPUT, node);
  }

  public void insertInput(Input prev, Input node) {
    this.insertChild(prev, Function.INPUT, node);
  }

  public int getOutputsCount() {
    return this.getChildCount(Function.OUTPUT);
  }

  public Iterator<Output> outputs() {
    return this.children(Output.class, Function.OUTPUT);
  }

  public List<Output> getOutputs() {
    return this.getChildren(Output.class, Function.OUTPUT);
  }

  public void addOutput(Output node) {
    this.addChild(Function.OUTPUT, node);
  }

  public void insertOutput(Output prev, Output node) {
    this.insertChild(prev, Function.OUTPUT, node);
  }


  public static Function newInstance(SModel sm, boolean init) {
    return (Function)SModelUtil_new.instantiateConceptDeclaration("mps.samples.functions.structure.Function", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Function newInstance(SModel sm) {
    return Function.newInstance(sm, false);
  }

}
